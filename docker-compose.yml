services:
  minio:
    image: minio/minio:latest
    ports:
      - '9000:9000'
      - '9001:9001'
    container_name: minio
    volumes:
      - minio_data:/data
      - minio_config:/root/.minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
#    healthcheck:
#      test: ["CMD-SHELL", "curl -f http://localhost:9000/minio/health/live || exit 1"]
#      interval: 10s
#      timeout: 5s
#      retries: 3
#      start_period: 30s
    entrypoint: ["/bin/sh", "-c", "mkdir -p /data/note-service /data/gallery-service && exec minio server /data --console-address :9001"]
    networks:
      - app-network

  mongodb-note:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_PORT: 27017
      MONGO_DB_NAME: admin
    volumes:
      - mongo-data:/data/db
##    depends_on:
##      minio:
##        condition: service_healthy
##    healthcheck:
##      test: ["CMD-SHELL", "echo 'db.runCommand(\"ping\").ok' | mongosh mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@localhost:${MONGO_PORT}/?authSource=${MONGO_DB_NAME} --quiet || exit 1"]
##      interval: 10s
##      timeout: 5s
##      retries: 3
##      start_period: 30s
    networks:
      - app-network

  mongo-express-note:
    image: mongo-express:latest
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_SERVER: mongodb-note
##    depends_on:
##      mongodb-note:
##        condition: service_healthy
##    healthcheck:
##      test: ["CMD-SHELL", "curl -f http://localhost:8081 || exit 1"]
##      interval: 10s
##      timeout: 5s
##      retries: 3
##      start_period: 30s
    networks:
      - app-network

volumes:
  mongo-data:
    driver: local
  minio_data:
    driver: local
  minio_config:
    driver: local


networks:
  app-network:
    driver: bridge
